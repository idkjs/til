-- 第一引数が関数型a->bで第二引数がリスト[a]になる。関数fはリストの要素を受け取るので、関数fの引数の型とリストの型は同じ、これを型変数aで表す。
-- 関数fの返り値の型とmap'の返り値のリストの型は同じ、こちらを型変数bであらわす。
map' :: (a -> b) -> [a] -> [b]
-- 空の場合、再帰停止
map' _ [] = []
-- パターンマッチングで引数のリストを先頭の要素xと残りの要素xsに分解
-- xに関数fを適用した結果とmap' f xsの結果をコンス演算子:で結合
map' f (x:xs) = f x : map' f xs

main = do
  let l = [0..10]
  print (map' (* 2) l)
  print (map' (+ 10) l)
  print (map' (^ 2) l)
